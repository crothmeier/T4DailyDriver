# direnv configuration for T4 Daily Driver
# This file automatically activates the virtual environment when entering the directory
#
# To use:
#   1. Install direnv: https://direnv.net/docs/installation.html
#   2. Run: direnv allow
#
# The virtual environment will be automatically activated when you cd into this directory

# Check if .venv exists, create if it doesn't
if [ ! -d ".venv" ]; then
    echo "Virtual environment not found. Creating..."

    # Find Python 3.10
    PYTHON_CMD=""
    for cmd in python3.10 python310 python3; do
        if command -v "$cmd" >/dev/null 2>&1; then
            version=$("$cmd" --version 2>&1 | grep -oE '[0-9]+\.[0-9]+' | head -1)
            if [[ "$version" == "3.10" ]]; then
                PYTHON_CMD="$cmd"
                break
            fi
        fi
    done

    if [ -z "$PYTHON_CMD" ]; then
        echo "ERROR: Python 3.10 not found! Please install it first."
        echo "  Ubuntu/Debian: sudo apt-get install python3.10 python3.10-venv"
        echo "  macOS: brew install python@3.10"
        return 1
    fi

    "$PYTHON_CMD" -m venv .venv
    echo "Virtual environment created with $PYTHON_CMD"
fi

# Activate virtual environment
source .venv/bin/activate

# Set Python path for better IDE integration
export PYTHONPATH="${PYTHONPATH}:${PWD}"

# Export project-specific environment variables
export PROJECT_ROOT="${PWD}"

# Load .env file if it exists (for local overrides)
if [ -f .env ]; then
    set -a
    source .env
    set +a
    echo "Loaded .env file"
fi

# Set default environment variables if not already set
export MODEL_NAME="${MODEL_NAME:-TheBloke/Mistral-7B-Instruct-v0.2-AWQ}"
export TENSOR_PARALLEL_SIZE="${TENSOR_PARALLEL_SIZE:-1}"
export GPU_MEMORY_UTILIZATION="${GPU_MEMORY_UTILIZATION:-0.95}"
export HOST="${HOST:-0.0.0.0}"
export PORT="${PORT:-8080}"
export ENABLE_METRICS="${ENABLE_METRICS:-true}"
export METRICS_PORT="${METRICS_PORT:-9090}"

# Use constraints file if available
if [ -f "constraints-cu121-py310.txt" ]; then
    export PIP_CONSTRAINT="constraints-cu121-py310.txt"
elif [ -f "constraints.txt" ]; then
    export PIP_CONSTRAINT="constraints.txt"
fi

# Display environment info
echo "✓ Python environment activated: $(which python)"
echo "✓ Python version: $(python --version)"
echo "✓ Project root: $PROJECT_ROOT"

# Check if dependencies are installed
if ! python -c "import pytest" 2>/dev/null; then
    echo ""
    echo "⚠ Development dependencies not installed."
    echo "  Run: make dev-setup"
fi

# Layout for Python (helps with IDE integration)
layout python
